name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -cover -v ./...
    - name: Add Coverage Label
      uses: actions/github-script@v2
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let newLabel = 'COV: ${{steps.coverage-percent.outputs.coverage}}'
          const labels = await github.issues.listLabelsOnIssue({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo
          })
          console.log(labels.data)
          let covLabel = null
          labels.data.forEach(label => {
            if (label.name.match(/COV:/)) {
              covLabel = label
            }
          })
          if (covLabel && covLabel.name === newLabel) {
            covLabel = null
          }
          covLabel && github.issues.removeLabel({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: covLabel.name,
          })
          newLabel && github.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: [newLabel]
          })
